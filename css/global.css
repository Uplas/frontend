/* css/global.css */
/* ================================================
   Uplas Global Styles (global.css)
   - Base HTML, typography, utilities, forms, header, footer, modals.
   - Assumes variables.css is linked before this in HTML.
   ================================================ */

/* --- Import Font Awesome & Google Fonts --- */
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap');

/* --- Base HTML & Body --- */
:root {
    font-family: var(--font-primary, 'Poppins', sans-serif);
    font-size: var(--font-size-base, 16px);
    line-height: var(--line-height-base, 1.65);
    background-color: var(--current-bg-color, #ffffff);
    color: var(--current-text-color, #212529);
}

*, *::before, *::after { box-sizing: border-box; margin: 0; padding: 0; }

html {
    scroll-behavior: smooth;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    height: 100%;
}
/* Adjust root font size for smaller screens for better overall scaling of rem units */
@media (max-width: 767px) {
    html {
        font-size: 15px;
    }
}
@media (max-width: 480px) {
    html {
        font-size: 14px;
    }
}


body {
    font-family: var(--font-primary);
    background-color: var(--current-bg-color);
    color: var(--current-text-color);
    margin: 0;
    min-height: 100%;
    display: flex;
    flex-direction: column;
    line-height: var(--line-height-base);
    transition: background-color var(--transition-base), color var(--transition-base);
    padding-top: var(--header-height, 70px); /* Default header height */
    overflow-x: hidden;
}
@media (max-width: 991px) {
    body {
        padding-top: var(--header-height-mobile, 60px); /* Use mobile header height */
    }
}


body.mobile-nav-active { overflow-y: hidden; }

/* --- Typography --- */
h1, h2, h3, h4, h5, h6 {
    line-height: var(--line-height-heading, 1.3);
    font-weight: var(--font-weight-semibold);
    color: var(--current-text-color);
    margin-bottom: var(--spacing-md);
}

/* Responsive font sizes for headings */
h1 { font-size: var(--font-size-hero, clamp(2.0rem, 5.5vw, 3.3rem)); font-weight: var(--font-weight-bold); }
h2 { font-size: clamp(1.5rem, 4vw, var(--font-size-xxl, 2rem)); }
h3 { font-size: clamp(1.25rem, 3.5vw, var(--font-size-xl, 1.5rem)); }
h4 { font-size: clamp(1.05rem, 3vw, var(--font-size-lg, 1.125rem)); }

p { margin-bottom: var(--spacing-md); }
a {
    color: var(--current-link-color);
    text-decoration: none;
    transition: color var(--transition-short);
}
a:hover, a:focus-visible {
    color: var(--current-link-hover-color);
    text-decoration: underline;
}
img, picture, video, canvas, svg { display: block; max-width: 100%; height: auto; }
ul, ol { list-style-position: outside; padding-left: var(--spacing-lg); margin-bottom: var(--spacing-md); }
li { margin-bottom: var(--spacing-xs); }

/* --- Layout & Utilities --- */
.container {
    width: 100%;
    max-width: var(--container-max-width, 1200px);
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--container-padding-x, var(--spacing-lg));
    padding-right: var(--container-padding-x, var(--spacing-lg));
}
@media (max-width: 767px) {
    .container {
        padding-left: var(--container-padding-x-mobile, var(--spacing-md));
        padding-right: var(--container-padding-x-mobile, var(--spacing-md));
    }
}

.sr-only {
    position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px;
    overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
}
.section-title {
    font-weight: var(--font-weight-bold);
    margin-bottom: var(--spacing-lg);
    color: var(--current-text-color);
    text-align: center;
}
.section-title--left-align { text-align: left; }
.section-subtitle {
    font-size: clamp(1rem, 2.5vw, var(--font-size-lg, 1.125rem));
    color: var(--current-text-color-secondary);
    max-width: 750px;
    margin: 0 auto var(--spacing-md) auto;
    text-align: center;
    line-height: 1.7;
}

/* --- Focus Visible --- */
*:focus:not(:focus-visible) { outline: none; }
*:focus-visible {
    outline: var(--border-width-bold) solid var(--color-accent, orange);
    outline-offset: 2px;
    box-shadow: 0 0 0 3px var(--color-accent-light, rgba(244, 162, 97, 0.35));
    border-radius: var(--border-radius-sm);
}

/* --- Buttons --- */
.button {
    display: inline-flex; align-items: center; justify-content: center;
    gap: var(--spacing-xs); padding: var(--spacing-sm) var(--spacing-lg);
    font-family: var(--font-primary); font-weight: var(--font-weight-medium);
    font-size: var(--font-size-sm); border-radius: var(--border-radius-md);
    border: var(--border-width-bold) solid transparent; cursor: pointer;
    text-align: center; text-decoration: none; white-space: nowrap;
    transition: all var(--transition-base);
    box-shadow: var(--box-shadow-xs);
    -webkit-tap-highlight-color: transparent;
}
.button:hover { transform: translateY(-2px); box-shadow: var(--box-shadow-md); text-decoration: none; }
.button--primary {
    background-color: var(--current-button-primary-bg, var(--color-primary));
    color: var(--current-button-primary-text, var(--color-white));
    border-color: var(--current-button-primary-border, var(--color-primary));
    font-weight: var(--font-weight-semibold);
}
.button--primary:hover, .button--primary:focus-visible {
    background-color: var(--current-button-primary-hover-bg, var(--color-primary-dark));
    border-color: var(--current-button-primary-hover-bg, var(--color-primary-dark));
}
.button--secondary {
    background-color: var(--current-button-secondary-bg, transparent);
    color: var(--current-button-secondary-text, var(--color-secondary));
    border-color: var(--current-button-secondary-border, var(--color-secondary));
}
.button--secondary:hover, .button--secondary:focus-visible {
    background-color: var(--current-button-secondary-hover-bg, var(--color-secondary));
    color: var(--current-button-secondary-hover-text, var(--color-white));
    border-color: var(--current-button-secondary-hover-bg, var(--color-secondary));
}
.button--theme {
    background: none; border: none; padding: var(--spacing-xs); font-size: 1.3rem;
    display: inline-flex; align-items: center; justify-content: center;
    width: 36px; height: 36px;
    color: var(--current-text-color-secondary);
}
.button--theme:hover { transform: none; box-shadow: none; color: var(--color-primary); }
.theme-icon--dark { display: inline-block; }
.theme-icon--light { display: none; }
.dark-mode .theme-icon--dark { display: none !important; }
.dark-mode .theme-icon--light { display: inline-block !important; }

/* --- Forms --- */
.form__group { margin-bottom: var(--spacing-lg); position: relative; }
.form__label {
    display: block; font-weight: var(--font-weight-medium);
    margin-bottom: var(--spacing-xs);
    font-size: var(--font-size-sm); color: var(--current-text-color);
}

/* Global input reset - excluding checkboxes and radios from full appearance stripping */
input:not([type="checkbox"]):not([type="radio"]),
button, /* Buttons already have .button style, but this reset can be a base */
textarea,
select {
    font: inherit;
    border: none;
    background: none;
    color: inherit;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

/* Default styling for text-like inputs, selects, textareas */
.form__input,
.form__select,
.form__textarea {
    width: 100%; padding: var(--spacing-sm) var(--spacing-md);
    border: var(--border-width) solid var(--current-input-border-color);
    border-radius: var(--border-radius-md);
    background-color: var(--current-input-bg);
    color: var(--current-input-text-color);
    font-size: 0.95rem; line-height: 1.5;
    transition: border-color var(--transition-short), box-shadow var(--transition-short);
}
/* Apply to specific input types if .form__input is too broad for some custom inputs */
input[type="text"].form__input,
input[type="email"].form__input,
input[type="password"].form__input,
input[type="tel"].form__input,
input[type="number"].form__input,
input[type="search"].form__input,
input[type="url"].form__input {
    /* These inherit .form__input styles */
}


.form__input::placeholder, .form__textarea::placeholder { color: var(--current-input-placeholder-color); opacity: 0.8; }

.form__input:focus,
.form__select:focus,
.form__textarea:focus {
    border-color: var(--color-primary); box-shadow: var(--box-shadow-focus); outline: none;
}
.form__input.invalid,
.form__select.invalid,
.form__textarea.invalid {
    border-color: var(--color-error) !important;
    box-shadow: var(--box-shadow-focus-error) !important;
}

/* Checkboxes and Radios - ensure they are visible and stylable */
input[type="checkbox"],
input[type="radio"] {
    appearance: auto; /* Let browser render default and allow styling */
    -webkit-appearance: auto;
    -moz-appearance: auto;
    width: 1.2em; /* A good default size */
    height: 1.2em;
    accent-color: var(--color-primary); /* Style the checkmark/dot */
    margin-right: var(--spacing-xs);
    vertical-align: middle; /* Better alignment with label text */
    border: var(--border-width) solid var(--current-input-border-color); /* Optional: if you want a border */
    background-color: var(--current-input-bg); /* Optional: if you want a background */
    cursor: pointer;
    border-radius: var(--border-radius-sm); /* For checkbox border */
}
input[type="radio"] {
    border-radius: 50%; /* For radio border */
}
input[type="checkbox"]:focus,
input[type="radio"]:focus {
    /* Use the global focus-visible for consistency */
}
input[type="checkbox"].invalid,
input[type="radio"].invalid {
    border-color: var(--color-error) !important;
    box-shadow: var(--box-shadow-focus-error) !important;
}


.form__error-message { display: block; color: var(--color-error); font-size: var(--font-size-xs); margin-top: var(--spacing-xxs); min-height: 1.2em; }

.form__select { /* Custom select arrow for non-checkbox/radio inputs */
    background-repeat: no-repeat; background-position: right var(--spacing-md) center; background-size: 1em;
    padding-right: calc(var(--spacing-md) + 1.5em); /* Space for arrow */
    /* SVG for select arrow, color adapts to --current-text-color-secondary */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='var(--current-text-color-secondary)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
}
/* Update SVG stroke for dark mode using CSS variables if possible, otherwise this might need two versions or inline SVG with currentColor */
.dark-mode .form__select {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='var(--color-dark-text-secondary)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
}


.form__status {
    margin-top: var(--spacing-md); padding: var(--spacing-sm) var(--spacing-md);
    border-radius: var(--border-radius-md); text-align: center;
    font-size: var(--font-size-sm); font-weight: var(--font-weight-medium); display: none;
}
.form__status--success { background-color: var(--color-success-light); color: var(--color-success); border: 1px solid var(--color-success); }
.form__status--error { background-color: var(--color-error-light); color: var(--color-error); border: 1px solid var(--color-error); }
.form__status--loading { background-color: var(--color-info-light); color: var(--color-primary-dark); border: 1px solid var(--color-primary); }
.form__row {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-md);
}
.form__row .form__group {
    flex: 1 1 auto;
    min-width: calc(50% - (var(--spacing-md) / 2));
}
@media (max-width: 576px) {
    .form__row .form__group {
        min-width: 100%; /* Stack form groups in a row on small screens */
    }
}

/* --- Header Styling --- */
.header {
    background-color: var(--current-header-bg);
    height: var(--header-height, 70px);
    box-shadow: var(--box-shadow-sm);
    border-bottom: var(--border-width) solid var(--current-border-color-light);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    transition: background-color var(--transition-base), border-color var(--transition-base);
    padding: 0;
}
@media (max-width: 991px) {
    .header {
        height: var(--header-height-mobile, 60px);
    }
}


.header__container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    gap: var(--spacing-md);
}

.logo {
    display: flex;
    align-items: center;
    text-decoration: none;
    flex-shrink: 0;
    gap: var(--spacing-xxs);
}

.logo__img {
    height: calc(var(--header-height, 70px) - var(--spacing-md)); /* Default for desktop */
    max-height: 45px;
    min-height: 30px; /* Ensure minimum size */
    width: auto;
}
@media (max-width: 991px) {
    .logo__img {
        height: calc(var(--header-height-mobile, 60px) - var(--spacing-sm)); /* Adjusted for mobile header */
        max-height: 40px;
    }
}


.logo__text {
    font-family: var(--font-primary);
    font-size: clamp(1.5rem, 2.5vw, 1.8rem);
    font-weight: var(--font-weight-semibold);
    color: var(--current-text-color);
    line-height: 1;
}
.dark-mode .logo__text { color: var(--color-primary-light); }


.nav { flex-grow: 1; display: flex; justify-content: flex-start; }
.nav__list { list-style: none; display: flex; align-items: center; padding: 0; margin: 0; gap: var(--spacing-sm); }
.nav__link {
    font-weight: var(--font-weight-medium); color: var(--current-text-color);
    padding: var(--spacing-xs) var(--spacing-md); position: relative;
    font-size: var(--font-size-sm); border-radius: var(--border-radius-sm);
}
.nav__link:not(.nav__link--cta)::after {
    content: ''; position: absolute; bottom: 0;
    left: 50%; transform: translateX(-50%);
    width: 0; height: 2px; background-color: var(--current-link-color);
    transition: width var(--transition-base);
}
.nav__link:not(.nav__link--cta):hover::after,
.nav__link:not(.nav__link--cta):focus-visible::after,
.nav__link--active:not(.nav__link--cta)::after {
    width: 70%;
}
.nav__link:not(.nav__link--cta):hover,
.nav__link:not(.nav__link--cta):focus-visible,
.nav__link--active:not(.nav__link--cta) {
    color: var(--current-link-hover-color);
    background-color: var(--color-primary-ultralight);
}


.header-actions { display: flex; align-items: center; gap: var(--spacing-md); flex-shrink: 0; }
.language-currency-selectors { display: flex; gap: var(--spacing-sm); align-items: center; }
.select-wrapper { position: relative; display: flex; align-items: center; }
.selector-icon {
    position: absolute; left: var(--spacing-sm); top: 50%; transform: translateY(-50%);
    font-size: 0.9em; color: var(--current-text-color-secondary); pointer-events: none;
}
.header-select {
    background-color: var(--current-input-bg); color: var(--current-text-color);
    border: 1px solid var(--current-border-color); border-radius: var(--border-radius-md);
    padding: var(--spacing-xs) var(--spacing-sm) var(--spacing-xs) calc(var(--spacing-sm) + 20px);
    font-size: var(--font-size-xs); font-weight: var(--font-weight-medium);
    /* appearance: none; -webkit-appearance: none; -moz-appearance: none; */ /* Handled by .form__select now */
    cursor: pointer; min-width: 80px; height: 32px; line-height: 1;
}
.header-select:hover { border-color: var(--color-primary); }

.user-profile-placeholder-header { display: none; align-items: center; }
.user-avatar-button-header {
    width: 36px; height: 36px; border-radius: 50%;
    background-color: var(--color-primary-light); color: var(--color-secondary-dark);
    font-weight: var(--font-weight-semibold); font-size: var(--font-size-sm);
    display: flex; align-items: center; justify-content: center;
    border: 1px solid var(--color-primary);
}

.nav__toggle {
    display: none;
    background: none; border: none; color: var(--current-text-color);
    font-size: 1.6rem; cursor: pointer; padding: var(--spacing-xs);
    z-index: 1051;
}
.nav__toggle:hover { color: var(--current-link-hover-color); }


/* --- Footer Styling --- */
.main-content { flex-grow: 1; }

.footer {
    background-color: var(--current-footer-bg);
    color: var(--current-footer-text-color);
    padding: var(--spacing-xxl) 0 var(--spacing-lg) 0;
    border-top: 1px solid var(--current-border-color);
}

.footer__container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(230px, 1fr));
    gap: var(--spacing-xl);
    text-align: left;
}
.footer__heading {
    font-size: 1.1rem; font-weight: var(--font-weight-semibold);
    margin-bottom: var(--spacing-md); color: var(--color-white);
    text-transform: uppercase; letter-spacing: 0.5px;
}
.dark-mode .footer__heading { color: var(--color-dark-text-primary); }

.footer__address p { margin: var(--spacing-xs) 0; font-size: 0.9rem; line-height: 1.6; }
.footer__icon { margin-right: var(--spacing-sm); opacity: 0.8; font-size: 0.9em; }
.footer__link { color: inherit; opacity: 0.9; transition: opacity var(--transition-short); }
.footer__link:hover { opacity: 1; text-decoration: underline; }

.footer__list { list-style: none; padding: 0; margin: 0; }
.footer__list li { margin-bottom: var(--spacing-sm); }

.social-media { display: flex; gap: var(--spacing-md); }
.social-media__link {
    color: inherit; font-size: 1.35rem; opacity: 0.8;
    width: 40px; height: 40px; display: inline-flex;
    align-items: center; justify-content: center;
    border-radius: 50%; background-color: rgba(255, 255, 255, 0.05);
    transition: all var(--transition-base);
}
.social-media__link:hover {
    color: var(--color-white); background-color: var(--color-primary);
    transform: translateY(-2px) scale(1.05); opacity: 1;
}

.footer__bottom {
    text-align: center; margin-top: var(--spacing-xl);
    padding-top: var(--spacing-lg);
    border-top: var(--border-width) solid var(--current-border-color);
}
.dark-mode .footer__bottom { border-top-color: var(--color-dark-border-secondary); }
.footer__copyright { font-size: 0.85rem; opacity: 0.8; margin: 0; }


/* --- Mobile Navigation Styles & Other Responsive Adjustments --- */
@media (max-width: 991px) {
    .nav {
        display: none;
        position: fixed;
        top: var(--header-height-mobile, 60px);
        left: 0;
        right: 0;
        width: 100%;
        height: calc(100vh - var(--header-height-mobile, 60px));
        background-color: var(--current-header-bg);
        box-shadow: var(--box-shadow-md);
        flex-direction: column;
        padding: var(--spacing-md) 0;
        overflow-y: auto;
        z-index: 999;
    }
    .nav.nav--active {
        display: flex;
        animation: slideDownNav 0.3s ease-out forwards;
    }
    @keyframes slideDownNav {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .nav__list { flex-direction: column; width: 100%; gap: 0; align-items: stretch; }
    .nav__item { width: 100%; margin:0; }
    .nav__link {
        display: block; padding: var(--spacing-md) var(--spacing-lg); width: 100%;
        text-align: left; border-bottom: var(--border-width) solid var(--current-border-color-light);
        border-radius: 0;
    }
    .nav__list li:last-child .nav__link { border-bottom: none; }
    .nav__link:not(.nav__link--cta)::after { display: none; }
    .nav__link--cta {
        margin: var(--spacing-sm) var(--spacing-lg);
        text-align: center;
        background-color: var(--color-primary);
        color: var(--color-white) !important;
        border-color: var(--color-primary);
    }
     .dark-mode .nav__link--cta {
        color: var(--color-black) !important;
    }

    .nav__toggle { display: flex; }

    .header-actions .language-currency-selectors { display: none; }

    .footer__container {
        text-align: center;
        gap: var(--spacing-lg);
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }
    .footer__section { margin-bottom: var(--spacing-lg); }
    .footer__list { display: inline-block; text-align: left; }
    .social-media { justify-content: center; }
}

@media (max-width: 480px) {
    .section-title {
        font-size: clamp(1.6rem, 6vw, var(--font-size-xl));
    }
    .section-subtitle {
        font-size: clamp(0.9rem, 3.5vw, var(--font-size-md));
    }
    .button {
        padding: calc(var(--spacing-sm) * 0.9) calc(var(--spacing-lg) * 0.9);
        font-size: calc(var(--font-size-sm) * 0.95);
    }
    .button--large {
        padding: calc(var(--spacing-md) * 0.9) calc(var(--spacing-xl) * 0.9);
        font-size: calc(var(--font-size-md) * 0.95);
    }
    .form__input, .form__select, .form__textarea {
        padding: calc(var(--spacing-sm) * 0.9) calc(var(--spacing-md) * 0.9);
        font-size: 0.9rem;
    }
}


/* Modal styles */
.modal-overlay {
    position: fixed; top: 0; left: 0; width: 100%; height: 100%;
    background-color: rgba(0,0,0,0.6);
    display: flex; align-items: center; justify-content: center;
    z-index: 1040;
    opacity: 0; visibility: hidden;
    transition: opacity 0.3s ease-out, visibility 0s 0.3s;
}
.modal-overlay[hidden] { display: none !important; }
.modal-overlay.active { opacity: 1; visibility: visible; transition-delay: 0s; }

.modal__content {
    background-color: var(--current-card-bg);
    padding: var(--spacing-xl); border-radius: var(--border-radius-lg);
    box-shadow: var(--box-shadow-xl); max-width: 90vw; width: 600px;
    max-height: 90vh; overflow-y: auto; position: relative;
    transform: scale(0.95); transition: transform 0.3s ease-out;
}
.modal-overlay.active .modal__content { transform: scale(1); }

@media (max-width: 767px) {
    .modal__content {
        width: 95vw;
        padding: var(--spacing-lg);
    }
}


.modal__close-button {
    position: absolute; top: var(--spacing-md); right: var(--spacing-md);
    background: none; border: none; font-size: 1.8rem; color: var(--current-text-color-secondary);
    cursor: pointer; line-height: 1; padding: 0;
}
.modal__close-button:hover { color: var(--color-error); }
.modal__title { font-size: var(--font-size-xl); margin-bottom: var(--spacing-lg); color: var(--current-text-color); }

/* Styles for the unified card payment form specifically in modals */
.payment-modal__content .payment-form {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

.payment-modal__content .input-with-icon {
    position: relative;
    display: flex;
    align-items: center;
}

.payment-modal__content .input-with-icon .form__input {
    padding-right: 40px;
}

.payment-modal__content .card-type-icon {
    position: absolute;
    right: var(--spacing-sm);
    top: 50%;
    transform: translateY(-50%);
    width: 28px;
    height: 20px;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    opacity: 0;
    transition: opacity 0.2s;
}
.payment-modal__content .card-type-icon.active {
    opacity: 0.7;
}

.payment-modal__content .card-type-icon.visa { background-image: url('../images/payment_icons/visa_icon.svg'); }
.payment-modal__content .card-type-icon.mastercard { background-image: url('../images/payment_icons/mastercard_icon.svg'); }
.payment-modal__content .card-type-icon.amex { background-image: url('../images/payment_icons/amex_icon.svg'); }
.payment-modal__content .card-type-icon.discover { background-image: url('../images/payment_icons/discover_icon.svg'); }
.payment-modal__content .card-type-icon.diners { background-image: url('../images/payment_icons/diners_icon.svg'); }
.payment-modal__content .card-type-icon.jcb { background-image: url('../images/payment_icons/jcb_icon.svg'); }

.payment-modal__content .form__row {
    display: flex;
    gap: var(--spacing-md);
}
.payment-modal__content .form__row .form__group { flex: 1; }
@media (max-width: 576px) {
    .payment-modal__content .form__row {
        flex-direction: column;
    }
}

.payment-modal__action-area { margin-top: var(--spacing-lg); }

#stripe-card-element {
    padding: var(--spacing-sm);
    border: var(--border-width) solid var(--current-input-border-color);
    border-radius: var(--border-radius-md);
    background-color: var(--current-input-bg);
}
#stripe-card-element.StripeElement--focus {
    border-color: var(--color-primary);
    box-shadow: var(--box-shadow-focus);
}
#stripe-card-errors { min-height: 1.2em; }
